NAME
    Lingua::Conjunction - Convert Perl lists into linguistic conjunctions

SYNOPSIS
        use Lingua::Conjunction;

        # emits "Jack"
        $name_list = conjunction('Jack');

        # emits "Jack and Jill"
        $name_list = conjunction('Jack', 'Jill');
  
        # emits "Jack, Jill, and Spot"
        $name_list = conjunction('Jack', 'Jill', 'Spot');

        # emits "Jack, a boy; Jill, a girl; and Spot, a dog"
        $name_list = conjunction('Jack, a boy', 'Jill, a girl', 'Spot, a dog');

        # emits "Jacques, un garcon; Jeanne, une fille; et Spot, un chien"
        Lingua::Conjunction->lang('fr');
        $name_list = conjunction(
            'Jacques, un garcon',
            'Jeanne, une fille',
            'Spot, un chien'
        );

DESCRIPTION
    Lingua::Conjunction exports a single subroutine, "conjunction", that
    converts a list into a properly punctuated text string.

    You can cause "conjunction" to use the connectives of other languages,
    by calling the appropriate subroutine:

        Lingua::Conjunction->lang('en');   # use 'and' (default)
        Lingua::Conjunction->lang('es');   # use 'y'

    Supported languages in this version are English, Spanish, French,
    Italian, German, Portuguese, Norwegian, Danish, Dutch, Afrikaans,
    Swahili, and Latin. (Klingon is intentionally not supported.)

    More details are in the module documentation.

SEE ALSO
    "Locale::Language"

    The *Perl Cookbook* in Section 4.2 has a simular subroutine called
    "commify_series". The different is that 1. this routine handles multiple
    languages and 2. being a module, you do not have to add the subroutine
    to a script every time you need it.

AUTHORS
    Robert Rothenberg <rrwo@cpan.org>

    Damian Conway <damian@csse.monash.edu.au>

LICENSE
    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

